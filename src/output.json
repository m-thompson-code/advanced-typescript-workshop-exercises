{
  "entries": [
    {
      "filepath": "src/exercises/any-of.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/any-of.ts",
      "complexity": 6,
      "tags": [
        "conditional-types",
        "index-accessed"
      ],
      "filename": "any-of",
      "exercise": "Any Of"
    },
    {
      "filepath": "src/exercises/bem-css-selectors.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/bem-css-selectors.ts",
      "complexity": 7,
      "tags": [
        "conditional-types",
        "distribution",
        "template-literals"
      ],
      "filename": "bem-css-selectors",
      "exercise": "BEM CSS Selectors"
    },
    {
      "filepath": "src/exercises/cat-dog.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/cat-dog.ts",
      "complexity": 3,
      "tags": [
        "generics-with-constraints",
        "learning-generics",
        "utility-types"
      ],
      "filename": "cat-dog",
      "exercise": "Cat Dog"
    },
    {
      "filepath": "src/exercises/common-fruits.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/common-fruits.ts",
      "complexity": 1,
      "tags": [
        "utility-types"
      ],
      "filename": "common-fruits",
      "exercise": "Common Fruits"
    },
    {
      "filepath": "src/exercises/concat.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/concat.ts",
      "complexity": 1,
      "tags": [
        "generics-with-constraints",
        "learning-arrays",
        "learning-generics"
      ],
      "filename": "concat",
      "exercise": "Concat"
    },
    {
      "filepath": "src/exercises/deep-partial.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/deep-partial.ts",
      "complexity": 9,
      "tags": [
        "conditional-types",
        "index-accessed",
        "mapped-types",
        "recursion",
        "utility-types"
      ],
      "filename": "deep-partial",
      "exercise": "Deep Partial"
    },
    {
      "filepath": "src/exercises/discriminated-union-with-unique-values-to-object.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/discriminated-union-with-unique-values-to-object.ts",
      "complexity": 5,
      "tags": [
        "conditional-types",
        "distribution",
        "index-accessed",
        "infer",
        "key-remapping",
        "mapped-types"
      ],
      "filename": "discriminated-union-with-unique-values-to-object",
      "exercise": "Discriminated Union with Unique Values to Object"
    },
    {
      "filepath": "src/exercises/dynamic-route.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/dynamic-route.ts",
      "complexity": 10,
      "tags": [
        "conditional-types",
        "distribution",
        "index-accessed",
        "infer",
        "learning-arrays",
        "mapped-types",
        "recursion",
        "template-literals",
        "utility-types"
      ],
      "filename": "dynamic-route",
      "exercise": "Dynamic Route"
    },
    {
      "filepath": "src/exercises/event-handler.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/event-handler.ts",
      "complexity": 6,
      "tags": [
        "distribution",
        "generics-with-constraints",
        "template-literals",
        "utility-types"
      ],
      "filename": "event-handler",
      "exercise": "Event Handler"
    },
    {
      "filepath": "src/exercises/event-types.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/event-types.ts",
      "complexity": 5,
      "tags": [
        "generics-with-constraints",
        "index-accessed",
        "learning-generics",
        "utility-types"
      ],
      "filename": "event-types",
      "exercise": "Event Types"
    },
    {
      "filepath": "src/exercises/finite-state-machine.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/finite-state-machine.ts",
      "complexity": 1,
      "tags": [
        "utility-types"
      ],
      "filename": "finite-state-machine",
      "exercise": "Finite State Machine"
    },
    {
      "filepath": "src/exercises/if.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/if.ts",
      "complexity": 1,
      "tags": [
        "conditional-types",
        "distribution",
        "generics-with-constraints"
      ],
      "filename": "if",
      "exercise": "If"
    },
    {
      "filepath": "src/exercises/infer-in-union-types.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/infer-in-union-types.ts",
      "complexity": 3,
      "tags": [
        "conditional-types",
        "distribution"
      ],
      "filename": "infer-in-union-types",
      "exercise": "Infer in Union Types"
    },
    {
      "filepath": "src/exercises/infer-with-raw-values.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/infer-with-raw-values.ts",
      "complexity": 1,
      "tags": [
        "conditional-types",
        "generics-with-constraints",
        "index-accessed"
      ],
      "filename": "infer-with-raw-values",
      "exercise": "Infer with Raw Values"
    },
    {
      "filepath": "src/exercises/length-of-tuple.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/length-of-tuple.ts",
      "complexity": 1,
      "tags": [
        "conditional-types",
        "generics-with-constraints",
        "index-accessed",
        "infer",
        "learning-arrays",
        "learning-generics"
      ],
      "filename": "length-of-tuple",
      "exercise": "Length of Tuple"
    },
    {
      "filepath": "src/exercises/mutually-exclusive-properties.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/mutually-exclusive-properties.ts",
      "complexity": 4,
      "tags": [
        "index-accessed",
        "mapped-types"
      ],
      "filename": "mutually-exclusive-properties",
      "exercise": "Mutually Exclusive Properties"
    },
    {
      "filepath": "src/exercises/my-exclude.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/my-exclude.ts",
      "complexity": 3,
      "tags": [
        "conditional-types",
        "distribution",
        "utility-types"
      ],
      "filename": "my-exclude",
      "exercise": "My Exclude"
    },
    {
      "filepath": "src/exercises/narrow-with-arrays.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/narrow-with-arrays.ts",
      "complexity": 5,
      "tags": [
        "generics-with-constraints",
        "index-accessed",
        "learning-arrays",
        "learning-generics",
        "utility-types"
      ],
      "filename": "narrow-with-arrays",
      "exercise": "Narrow with Arrays"
    },
    {
      "filepath": "src/exercises/non-empty-array.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/non-empty-array.ts",
      "complexity": 4,
      "tags": [
        "learning-arrays",
        "learning-generics"
      ],
      "filename": "non-empty-array",
      "exercise": "Non-empty Array"
    },
    {
      "filepath": "src/exercises/omit-by-type.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/omit-by-type.ts",
      "complexity": 6,
      "tags": [
        "conditional-types",
        "distribution",
        "index-accessed",
        "key-remapping",
        "mapped-types"
      ],
      "filename": "omit-by-type",
      "exercise": "Omit by Type"
    },
    {
      "filepath": "src/exercises/partial-required.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/partial-required.ts",
      "complexity": 6,
      "tags": [
        "generics-with-constraints",
        "learning-generics",
        "utility-types"
      ],
      "filename": "partial-required",
      "exercise": "Partial Required"
    },
    {
      "filepath": "src/exercises/printf.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/printf.ts",
      "complexity": 9,
      "tags": [
        "conditional-types",
        "index-accessed",
        "infer",
        "recursion",
        "template-literals"
      ],
      "filename": "printf",
      "exercise": "Printf"
    },
    {
      "filepath": "src/exercises/promise-all.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/promise-all.ts",
      "complexity": 6,
      "tags": [
        "generics-with-constraints",
        "learning-arrays",
        "learning-generics",
        "mapped-types",
        "utility-types"
      ],
      "filename": "promise-all",
      "exercise": "Promise All"
    },
    {
      "filepath": "src/exercises/replace.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/replace.ts",
      "complexity": 6,
      "tags": [
        "conditional-types",
        "generics-with-constraints",
        "infer",
        "template-literals"
      ],
      "filename": "replace",
      "exercise": "Replace"
    },
    {
      "filepath": "src/exercises/reverse-arguments.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/reverse-arguments.ts",
      "complexity": 8,
      "tags": [
        "conditional-types",
        "generics-with-constraints",
        "infer",
        "learning-arrays",
        "recursion",
        "utility-types"
      ],
      "filename": "reverse-arguments",
      "exercise": "Reverse Arguments"
    },
    {
      "filepath": "src/exercises/starts-with.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/starts-with.ts",
      "complexity": 2,
      "tags": [
        "conditional-types",
        "generics-with-constraints",
        "template-literals"
      ],
      "filename": "starts-with",
      "exercise": "StartsWith"
    },
    {
      "filepath": "src/exercises/team-members.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/team-members.ts",
      "complexity": 3,
      "tags": [
        "utility-types"
      ],
      "filename": "team-members",
      "exercise": "Team Members"
    },
    {
      "filepath": "src/exercises/template-literal-value-extraction.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/template-literal-value-extraction.ts",
      "complexity": 2,
      "tags": [
        "conditional-types",
        "infer",
        "template-literals"
      ],
      "filename": "template-literal-value-extraction",
      "exercise": "Template Literal Value Extraction"
    },
    {
      "filepath": "src/exercises/tree-path-array.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/tree-path-array.ts",
      "complexity": 9,
      "tags": [
        "conditional-types",
        "index-accessed",
        "learning-arrays",
        "recursion"
      ],
      "filename": "tree-path-array",
      "exercise": "Tree Path Array"
    },
    {
      "filepath": "src/exercises/trim-left.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/trim-left.ts",
      "complexity": 4,
      "tags": [
        "conditional-types",
        "distribution",
        "infer",
        "recursion",
        "template-literals"
      ],
      "filename": "trim-left",
      "exercise": "Trim Left"
    },
    {
      "filepath": "src/exercises/tuple-to-object.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/tuple-to-object.ts",
      "complexity": 4,
      "tags": [
        "generics-with-constraints",
        "index-accessed",
        "learning-arrays",
        "mapped-types"
      ],
      "filename": "tuple-to-object",
      "exercise": "Tuple to Object"
    },
    {
      "filepath": "src/exercises/unique.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/unique.ts",
      "complexity": 9,
      "tags": [
        "conditional-types",
        "distribution",
        "generics-with-constraints",
        "index-accessed",
        "infer",
        "learning-arrays",
        "recursion"
      ],
      "filename": "unique",
      "exercise": "Unique"
    },
    {
      "filepath": "src/exercises/unique-extreme.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/unique-extreme.ts",
      "complexity": 10,
      "tags": [
        "conditional-types",
        "distribution",
        "generics-with-constraints",
        "index-accessed",
        "infer",
        "learning-arrays",
        "recursion"
      ],
      "filename": "unique-extreme",
      "exercise": "Unique Extreme"
    },
    {
      "filepath": "src/exercises/utility-types-madness.ts",
      "url": "https://github.com/m-thompson-code/advanced-typescript-workshop/tree/main/src/exercises/utility-types-madness.ts",
      "complexity": 1,
      "tags": [
        "learning-generics",
        "utility-types"
      ],
      "filename": "utility-types-madness",
      "exercise": "Utility Types Madness"
    }
  ],
  "tags": [
    "conditional-types",
    "index-accessed",
    "template-literals",
    "learning-generics",
    "learning-arrays",
    "generics-with-constraints",
    "utility-types",
    "mapped-types",
    "key-remapping",
    "infer",
    "distribution",
    "recursion"
  ],
  "difficulties": [
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10
  ],
  "tagCounts": {
    "conditional-types": 20,
    "index-accessed": 15,
    "template-literals": 8,
    "learning-generics": 9,
    "learning-arrays": 11,
    "generics-with-constraints": 16,
    "utility-types": 14,
    "mapped-types": 7,
    "key-remapping": 2,
    "infer": 10,
    "distribution": 11,
    "recursion": 8
  },
  "complexityCounts": {
    "1": 7,
    "2": 2,
    "3": 4,
    "4": 4,
    "5": 3,
    "6": 6,
    "7": 1,
    "8": 1,
    "9": 4,
    "10": 2
  }
}